digraph "reg::Visualizer"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node22 [label="reg::Visualizer",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node23 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="reg::Wrapper\< vtkImageData \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structreg_1_1_wrapper.html"];
  Node24 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="std::conditional::type\l\< is_stl\< vtkImageData\l \>::value, WrapperBase\l\< vtkImageData, std::unique\l_ptr\< vtkImageData \> \>, std\l::conditional\< std::is_base\l_of\< itk::Object, vtkImageData\l \>::value, WrapperBase\< vtkImageData,\l itk::SmartPointer\< vtkImageData \>\l \>, std::conditional\< std::is_base_of\l\< vtkObject, vtkImageData \>::value, WrapperBase\l\< vtkImageData, vtkSmartPointer\< vtkImageData\l \> \>, WrapperBase\< void, void \> \>::type \>::type \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node25 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="reg::Wrapper\< vtkRenderer \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structreg_1_1_wrapper.html"];
  Node26 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="std::conditional\< is\l_stl\< vtkRenderer  \>\l::value, WrapperBase\<\l vtkRenderer , std::unique\l_ptr\< vtkRenderer  \> \>, std\l::conditional\< std::is_base\l_of\< itk::Object, vtkRenderer\l  \>::value, WrapperBase\< vtkRenderer\l , itk::SmartPointer\< vtkRenderer\l  \> \>, std::conditional\< std::is_base\l_of\< vtkObject, vtkRenderer  \>::value,\l WrapperBase\< vtkRenderer , vtkSmartPointer\l\< vtkRenderer  \> \>, WrapperBase\< void, void\l \> \>::type \>::type \>::type",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node27 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="reg::Wrapper\< vtkRenderWindow \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structreg_1_1_wrapper.html"];
  Node28 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="std::conditional::type\l\< is_stl\< vtkRenderWindow\l \>::value, WrapperBase\< vtkRender\lWindow, std::unique_ptr\< vtkRenderWindow\l \> \>, std::conditional\< std::is_base\l_of\< itk::Object, vtkRenderWindow \>::\lvalue, WrapperBase\< vtkRenderWindow, itk\l::SmartPointer\< vtkRenderWindow \> \>, std\l::conditional\< std::is_base_of\< vtkObject,\l vtkRenderWindow \>::value, WrapperBase\< vtkRenderWindow,\l vtkSmartPointer\< vtkRenderWindow \> \>, WrapperBase\l\< void, void \> \>::type \>::type \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node29 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="reg::Wrapper\< vtkRenderWindow\lInteractor \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structreg_1_1_wrapper.html"];
  Node30 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="std::conditional::type\l\< is_stl\< vtkRenderWindowInteractor\l \>::value, WrapperBase\< vtkRenderWindow\lInteractor, std::unique_ptr\< vtkRenderWindowInteractor\l \> \>, std::conditional\< std::is_base_of\< itk::\lObject, vtkRenderWindowInteractor \>::value, WrapperBase\l\< vtkRenderWindowInteractor, itk::SmartPointer\< vtkRenderWindowInteractor\l \> \>, std::conditional\< std::is_base_of\< vtkObject, vtkRenderWindowInteractor\l \>::value, WrapperBase\< vtkRenderWindowInteractor, vtkSmartPointer\< vtkRenderWindowInteractor\l \> \>, WrapperBase\< void, void \> \>::type \>::type \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node31 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node31 [label="reg::Wrapper\< vtkSmartVolume\lMapper \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structreg_1_1_wrapper.html"];
  Node32 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 [label="std::conditional::type\l\< is_stl\< vtkSmartVolumeMapper\l \>::value, WrapperBase\< vtkSmartVolume\lMapper, std::unique_ptr\< vtkSmartVolumeMapper\l \> \>, std::conditional\< std::is_base_of\l\< itk::Object, vtkSmartVolumeMapper \>::value,\l WrapperBase\< vtkSmartVolumeMapper, itk::SmartPointer\l\< vtkSmartVolumeMapper \> \>, std::conditional\< std\l::is_base_of\< vtkObject, vtkSmartVolumeMapper \>::value,\l WrapperBase\< vtkSmartVolumeMapper, vtkSmartPointer\< vtkSmartVolumeMapper\l \> \>, WrapperBase\< void, void \> \>::type \>::type \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node33 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 [label="reg::Wrapper\< vtkVolume \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structreg_1_1_wrapper.html"];
  Node34 -> Node33 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node34 [label="std::conditional::type\l\< is_stl\< vtkVolume \>\l::value, WrapperBase\< vtkVolume,\l std::unique_ptr\< vtkVolume\l \> \>, std::conditional\< std::\lis_base_of\< itk::Object, vtkVolume\l \>::value, WrapperBase\< vtkVolume,\l itk::SmartPointer\< vtkVolume \> \>,\l std::conditional\< std::is_base_of\l\< vtkObject, vtkVolume \>::value, WrapperBase\l\< vtkVolume, vtkSmartPointer\< vtkVolume \>\l \>, WrapperBase\< void, void \> \>::type \>::type \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node35 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node35 [label="reg::Wrapper\< vtkVolumeProperty \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structreg_1_1_wrapper.html"];
  Node36 -> Node35 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node36 [label="std::conditional::type\l\< is_stl\< vtkVolumeProperty\l \>::value, WrapperBase\< vtkVolumeProperty,\l std::unique_ptr\< vtkVolumeProperty\l \> \>, std::conditional\< std::is_base\l_of\< itk::Object, vtkVolumeProperty \>\l::value, WrapperBase\< vtkVolumeProperty,\l itk::SmartPointer\< vtkVolumeProperty \>\l \>, std::conditional\< std::is_base_of\< vtkObject,\l vtkVolumeProperty \>::value, WrapperBase\< vtkVolumeProperty,\l vtkSmartPointer\< vtkVolumeProperty \> \>, WrapperBase\<\l void, void \> \>::type \>::type \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node37 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node37 [label="reg::CompositeOpacity",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structreg_1_1_composite_opacity.html",tooltip="alias for Wrapper<vtkPiecewiseFunction> for disambiguation "];
  Node38 -> Node37 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node38 [label="reg::Wrapper\< vtkPiecewise\lFunction \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structreg_1_1_wrapper.html"];
  Node39 -> Node38 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node39 [label="std::conditional::type\l\< is_stl\< vtkPiecewiseFunction\l \>::value, WrapperBase\< vtkPiecewise\lFunction, std::unique_ptr\< vtkPiecewiseFunction\l \> \>, std::conditional\< std::is_base_of\<\l itk::Object, vtkPiecewiseFunction \>::value,\l WrapperBase\< vtkPiecewiseFunction, itk::SmartPointer\l\< vtkPiecewiseFunction \> \>, std::conditional\< std\l::is_base_of\< vtkObject, vtkPiecewiseFunction \>::value,\l WrapperBase\< vtkPiecewiseFunction, vtkSmartPointer\< vtkPiecewiseFunction\l \> \>, WrapperBase\< void, void \> \>::type \>::type \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node40 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node40 [label="reg::Wrapper\< vtkImageShift\lScale \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structreg_1_1_wrapper.html"];
  Node41 -> Node40 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node41 [label="std::conditional::type\l\< is_stl\< vtkImageShiftScale\l \>::value, WrapperBase\< vtkImageShift\lScale, std::unique_ptr\< vtkImageShiftScale\l \> \>, std::conditional\< std::is_base_of\l\< itk::Object, vtkImageShiftScale \>::value,\l WrapperBase\< vtkImageShiftScale, itk::SmartPointer\l\< vtkImageShiftScale \> \>, std::conditional\< std\l::is_base_of\< vtkObject, vtkImageShiftScale \>::value,\l WrapperBase\< vtkImageShiftScale, vtkSmartPointer\< vtkImageShiftScale\l \> \>, WrapperBase\< void, void \> \>::type \>::type \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node42 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node42 [label="reg::Wrapper\< vtkImageThreshold \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structreg_1_1_wrapper.html"];
  Node43 -> Node42 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node43 [label="std::conditional::type\l\< is_stl\< vtkImageThreshold\l \>::value, WrapperBase\< vtkImageThreshold,\l std::unique_ptr\< vtkImageThreshold\l \> \>, std::conditional\< std::is_base\l_of\< itk::Object, vtkImageThreshold \>\l::value, WrapperBase\< vtkImageThreshold,\l itk::SmartPointer\< vtkImageThreshold \>\l \>, std::conditional\< std::is_base_of\< vtkObject,\l vtkImageThreshold \>::value, WrapperBase\< vtkImageThreshold,\l vtkSmartPointer\< vtkImageThreshold \> \>, WrapperBase\<\l void, void \> \>::type \>::type \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
}

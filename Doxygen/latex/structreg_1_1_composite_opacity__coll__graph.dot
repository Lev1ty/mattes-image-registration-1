digraph "reg::CompositeOpacity"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node4 [label="reg::CompositeOpacity",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node5 [label="reg::Wrapper\< vtkPiecewise\lFunction \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structreg_1_1_wrapper.html"];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node6 [label="std::conditional::type\l\< is_stl\< vtkPiecewiseFunction\l \>::value, WrapperBase\< vtkPiecewise\lFunction, std::unique_ptr\< vtkPiecewiseFunction\l \> \>, std::conditional\< std::is_base_of\<\l itk::Object, vtkPiecewiseFunction \>::value,\l WrapperBase\< vtkPiecewiseFunction, itk::SmartPointer\l\< vtkPiecewiseFunction \> \>, std::conditional\< std\l::is_base_of\< vtkObject, vtkPiecewiseFunction \>::value,\l WrapperBase\< vtkPiecewiseFunction, vtkSmartPointer\< vtkPiecewiseFunction\l \> \>, WrapperBase\< void, void \> \>::type \>::type \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
}

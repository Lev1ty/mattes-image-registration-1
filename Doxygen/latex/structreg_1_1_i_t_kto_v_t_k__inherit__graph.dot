digraph "reg::ITKtoVTK"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node0 [label="reg::ITKtoVTK",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node0 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 [label="reg::Wrapper\< itk::\lImage\< double, 3 \> \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structreg_1_1_wrapper.html"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node2 [label="std::conditional::type\l\< is_stl\< itk::Image\<\l double, 3 \> \>::value,\l WrapperBase\< itk::Image\l\< double, 3 \>, std::unique\l_ptr\< itk::Image\< double, 3\l \> \> \>, std::conditional\< std\l::is_base_of\< itk::Object, itk\l::Image\< double, 3 \> \>::value,\l WrapperBase\< itk::Image\< double,\l 3 \>, itk::SmartPointer\< itk::Image\l\< double, 3 \> \> \>, std::conditional\l\< std::is_base_of\< vtkObject, itk::Image\l\< double, 3 \> \>::value, WrapperBase\< itk\l::Image\< double, 3 \>, vtkSmartPointer\< itk\l::Image\< double, 3 \> \> \>, WrapperBase\< void,\l void \> \>::type \>::type \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node3 -> Node0 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node3 [label="reg::Wrapper\< vtkImageData \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structreg_1_1_wrapper.html"];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node4 [label="std::conditional::type\l\< is_stl\< vtkImageData\l \>::value, WrapperBase\l\< vtkImageData, std::unique\l_ptr\< vtkImageData \> \>, std\l::conditional\< std::is_base\l_of\< itk::Object, vtkImageData\l \>::value, WrapperBase\< vtkImageData,\l itk::SmartPointer\< vtkImageData \>\l \>, std::conditional\< std::is_base_of\l\< vtkObject, vtkImageData \>::value, WrapperBase\l\< vtkImageData, vtkSmartPointer\< vtkImageData\l \> \>, WrapperBase\< void, void \> \>::type \>::type \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node5 -> Node0 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node5 [label="reg::Wrapper\< itk::\lImageToVTKImageFilter\l\< itk::Image\< double,\l 3 \> \> \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structreg_1_1_wrapper.html"];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node6 [label="std::conditional::type\l\< is_stl\< itk::ImageToVTKImage\lFilter\< itk::Image\< double,\l 3 \> \> \>::value, WrapperBase\l\< itk::ImageToVTKImageFilter\l\< itk::Image\< double, 3 \> \>, std\l::unique_ptr\< itk::ImageToVTKImageFilter\l\< itk::Image\< double, 3 \> \> \> \>, std\l::conditional\< std::is_base_of\< itk::Object,\l itk::ImageToVTKImageFilter\< itk::Image\< double,\l 3 \> \> \>::value, WrapperBase\< itk::ImageToVTKImageFilter\l\< itk::Image\< double, 3 \> \>, itk::SmartPointer\< itk\l::ImageToVTKImageFilter\< itk::Image\< double, 3 \> \> \>\l \>, std::conditional\< std::is_base_of\< vtkObject, itk\l::ImageToVTKImageFilter\< itk::Image\< double, 3 \> \> \>::value,\l WrapperBase\< itk::ImageToVTKImageFilter\< itk::Image\< double,\l 3 \> \>, vtkSmartPointer\< itk::ImageToVTKImageFilter\< itk::Image\l\< double, 3 \> \> \> \>, WrapperBase\< void, void \> \>::type \>::type \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
}
